"""Configuration builder for converting GUI settings to analysis configuration."""

import yaml
from pathlib import Path
from typing import Dict, Any
import tempfile
import os

from ...fluorospot_analysis import AnalysisConfig


class ConfigBuilder:
  """Build analysis configurations from GUI settings."""
  
  def __init__(self):
    pass
  
  def build_analysis_config(self, gui_config: Dict[str, Any]) -> AnalysisConfig:
    """Convert GUI configuration to AnalysisConfig object."""
    
    # Extract basic settings
    sfc_count = gui_config.get('sfc_count', 200000)
    sfc_cutoff = gui_config.get('sfc_cutoff', 20)
    control_stim = gui_config.get('control_stim', 'DMSO')
    
    # Extract mappings
    cytokines = gui_config.get('cytokines', {})
    plates = gui_config.get('plates', {})
    
    # Extract experimental conditions (if any)
    experimental_conditions = gui_config.get('experimental_conditions')
    
    # Create AnalysisConfig object
    analysis_config = AnalysisConfig(
      sfc_count=sfc_count,
      sfc_cutoff=sfc_cutoff,
      control_stim=control_stim,
      cytokines=cytokines,
      plates=plates,
      experimental_conditions=experimental_conditions
    )
    
    return analysis_config
  
  def create_temp_config_file(self, gui_config: Dict[str, Any]) -> Path:
    """Create a temporary YAML configuration file from GUI settings."""
    
    # Build YAML structure
    yaml_config = {
      'sfc_count': gui_config.get('sfc_count', 200000),
      'sfc_cutoff': gui_config.get('sfc_cutoff', 20),
      'control_stim': gui_config.get('control_stim', 'DMSO'),
      'cytokines': gui_config.get('cytokines', {}),
      'plates': gui_config.get('plates', {})
    }
    
    # Add experimental conditions if present
    exp_conditions = gui_config.get('experimental_conditions')
    if exp_conditions:
      yaml_config['experimental_conditions'] = exp_conditions
    
    # Create temporary file
    temp_fd, temp_path = tempfile.mkstemp(suffix='.yaml', prefix='fluorospot_config_')
    
    try:
      with os.fdopen(temp_fd, 'w') as temp_file:
        yaml.dump(yaml_config, temp_file, default_flow_style=False, sort_keys=False)
      
      return Path(temp_path)
    
    except Exception as e:
      # Clean up file descriptor if something goes wrong
      try:
        os.close(temp_fd)
      except:
        pass
      raise e
  
  def save_config(self, gui_config: Dict[str, Any], file_path: str) -> None:
    """Save GUI configuration to a YAML file."""
    
    # Build YAML structure (same as temp file but for permanent storage)
    yaml_config = {
      'sfc_count': gui_config.get('sfc_count', 200000),
      'sfc_cutoff': gui_config.get('sfc_cutoff', 20),
      'control_stim': gui_config.get('control_stim', 'DMSO'),
      'cytokines': gui_config.get('cytokines', {}),
      'plates': gui_config.get('plates', {})
    }
    
    # Add experimental conditions if present
    exp_conditions = gui_config.get('experimental_conditions')
    if exp_conditions:
      yaml_config['experimental_conditions'] = exp_conditions
    
    # Save to file
    with open(file_path, 'w') as file:
      # Add header comment
      file.write("# FluoroSpot Analysis Configuration\n")
      file.write("# Generated by FluoroSpot GUI\n\n")
      
      yaml.dump(yaml_config, file, default_flow_style=False, sort_keys=False)
  
  def load_config(self, file_path: str) -> Dict[str, Any]:
    """Load configuration from a YAML file."""
    
    with open(file_path, 'r') as file:
      yaml_config = yaml.safe_load(file)
    
    # Convert to GUI format
    gui_config = {
      'sfc_count': yaml_config.get('sfc_count', 200000),
      'sfc_cutoff': yaml_config.get('sfc_cutoff', 20),
      'control_stim': yaml_config.get('control_stim', 'DMSO'),
      'cytokines': yaml_config.get('cytokines', {}),
      'plates': yaml_config.get('plates', {}),
      'output_dir': str(Path.home() / "FluoroSpot_Results"),
      'results_filename': 'fluorospot-results.xlsx'
    }
    
    # Add experimental conditions if present
    if 'experimental_conditions' in yaml_config:
      gui_config['experimental_conditions'] = yaml_config['experimental_conditions']
    
    return gui_config
  
  def get_output_path(self, gui_config: Dict[str, Any]) -> Path:
    """Get the full output file path from GUI configuration."""
    
    output_dir = Path(gui_config.get('output_dir', Path.home() / "FluoroSpot_Results"))
    filename = gui_config.get('results_filename', 'fluorospot-results.xlsx')
    
    # Ensure filename has .xlsx extension
    if not filename.endswith('.xlsx'):
      filename += '.xlsx'
    
    # Create output directory if it doesn't exist
    output_dir.mkdir(parents=True, exist_ok=True)
    
    return output_dir / filename
  
  def validate_gui_config(self, gui_config: Dict[str, Any]) -> tuple[bool, list[str]]:
    """Validate GUI configuration and return validation results."""
    
    from ..validation.config_validator import ConfigValidator
    
    validator = ConfigValidator()
    return validator.validate_configuration(gui_config)
  
  def cleanup_temp_file(self, temp_path: Path) -> None:
    """Clean up a temporary configuration file."""
    
    try:
      if temp_path.exists():
        temp_path.unlink()
    except Exception:
      pass  # Ignore cleanup errors