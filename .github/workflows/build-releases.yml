name: Build Cross-Platform Releases

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-macos:
    strategy:
      matrix:
        include:
          - runner: macos-13
            arch: x86_64
            arch_name: Intel
          - runner: macos-latest
            arch: arm64
            arch_name: Apple-Silicon
    
    runs-on: ${{ matrix.runner }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install system dependencies
      run: |
        brew install imagemagick create-dmg
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r build_requirements.txt
        pip install -r requirements.txt
    
    - name: Create app icon
      run: |
        cd build_resources
        python create_app_icon.py
        cd ..
    
    - name: Build macOS app for ${{ matrix.arch_name }}
      run: |
        python build_single_arch.py ${{ matrix.arch }}
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macos-build-${{ matrix.arch_name }}
        path: |
          *.dmg
          *.zip
  
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r build_requirements.txt
    
    - name: Create Windows icon
      run: |
        cd build_resources
        python create_windows_icon.py
        cd ..
    
    - name: Build Windows executable
      run: |
        python build_windows.py onefile
    
    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: |
          *.zip
          dist/windows/*.exe
  
  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build-macos, build-windows]
    runs-on: ubuntu-latest
    
    steps:
    - name: Download Intel artifacts
      uses: actions/download-artifact@v4
      with:
        name: macos-build-Intel
        path: ./macos/intel/
    
    - name: Download Apple Silicon artifacts  
      uses: actions/download-artifact@v4
      with:
        name: macos-build-Apple-Silicon
        path: ./macos/apple-silicon/
    
    - name: Download Windows artifacts
      uses: actions/download-artifact@v4
      with:
        name: windows-build
        path: ./windows/
    
    - name: Create Release and Upload Assets
      uses: softprops/action-gh-release@v2
      with:
        name: Release ${{ github.ref_name }}
        body: |
          ## FluoroSpot Analysis Tool ${{ github.ref_name }}
          
          ### Downloads
          
          **Windows:**
          - Download the `FluoroSpot_Analysis_Tool_Windows.zip` file
          - Extract and run `FluoroSpot_Analysis_Tool.exe`
          
          **macOS:**
          - **Intel Mac**: Download the `FluoroSpot_Analysis_Intel.dmg` file
          - **Apple Silicon Mac**: Download the `FluoroSpot_Analysis_Apple-Silicon.dmg` file
          
          ### Installation
          
          **Windows:**
          1. Download and extract the ZIP file
          2. Run `FluoroSpot_Analysis_Tool.exe`
          3. Windows may show a security warning - click "More info" then "Run anyway"
          
          **macOS:**
          1. Download the appropriate DMG file for your Mac
          2. Double-click to mount the DMG
          3. Drag the application to your Applications folder
          4. Run the application from Applications
          5. You will likely need to go into Privacy & Settings to allow running the software
          
          ### Changes
          See the commit history for details on changes in this release.
        files: |
          windows/*.zip
          windows/*.exe
          macos/intel/*.dmg
          macos/intel/*.zip
          macos/apple-silicon/*.dmg
          macos/apple-silicon/*.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}